- content_for :js do
  = javascript_include_tag 'askable_new'

- content_for :title_string do
  #{ @country.to_s if @country.present? } + New Question

- flash.now[:alert]  = new_askable_validation_error if  @askable.errors.present?


#nask
  %h1
    = t('askable.new.country_flag', country_flag: country_m_flag(@country)).html_safe
    
  %h2.sub
    %em= t('askable.new.choose')
  
  .types
    #Poll.type.active
      .block
        %h2 Simple Polling
        .intro
          .q
            .left Q:
            .dashes
            .qmark ?
          .a
            %span.yesno 
              %span.yes Yes 
              %em or
              %span.no No?
          .pie
            .left A:
            = image_tag('/assets/pie.png')

    
    #Question.type.inactive
      .block
        %h2 Classic Q&A
        .intro
          .q
            .left Q:
            .dashes
            .qmark ?
          .a 
            .left A:
            .dots
            .dots
            .dots

    .or or
          
        
  .askable
    = form_for @askable, :url => country_askables_path(@country) do |f|
      .form
        %table
          = f.hidden_field :type, :value => 'Poll'
          = f.hidden_field :country_code, :value => (@country.present? ? @country.code : nil)
        
          %tr.q
            %td.label= f.label "Question: "
            %td.text= f.text_area :body

          %tr.yesno
            %td.label Answers:
            %td
              = f.text_field :yes, :class => 'field'
              %em or
              = f.text_field :no, :class => 'field'
    
          %tr.desc.vague
            %td.label 
              Description: 
            %td.text= f.text_area :description, :class => 'vague'
    
          %tr.coverage
            %td.label Participation:
            %td= f.select :coverage, [["Anyone", 0], ["Only those who are from the country", 1], ["Only those who are *not* from the country", 2]]
              
      .submit
        %a(href='#{ country_path(@country) }')
          &larr; back to #{ @country.to_s }
        = f.submit "Submit"