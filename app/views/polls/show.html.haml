- title = "Ask #{@country.name}"

- content_for :title_string do
  = title + ": " + @poll.question.truncate(80, :separator => ' ')

- content_for :js do
  = javascript_include_tag 'poll'


- if current_user
  - @ballot = @poll.ballots.where(country_code: @country.code, user_id: current_user.id).first
  - @is_owner = (current_user == @poll.owner)

#spbody
  #sph
    %h4.info
      .user
        = user_country_flag_link @poll.owner, :title => "#{@poll.owner} is from #{@poll.owner.country}"
        is asking #{link_to @country, country_path(@country)}:
    .poll
      .flag= link_to (country_image @country, 'o', :size => '50x50'), country_path(@country)
    
      %h1.question
        %span(class = '#{@poll.or_negative? ? "yes" : "none"}')
          = best_in_place_if @is_owner, @poll, :question, :ok_button => 'OK', :path => country_poll_path(@country, @poll), :classes => 'update_question_success', :data => { :country => @country.slug }
        
        - unless @poll.simple?
          - unless @poll.or_negative?
            %span(class="yes")= best_in_place_if @is_owner, @poll, :yes, :path => country_poll_path(@country, @poll)
          %em or
          %span(class="no") #{best_in_place_if @is_owner, @poll, :no, :path => country_poll_path(@country, @poll)}?

    .lc    
      - if @is_owner && @poll.description.present?
        .desc= best_in_place @poll, :description, :type => :textarea, :ok_button => 'OK', :path => country_poll_path(@country, @poll), :nil => 'add description...', :classes => 'update_desc_success'
      - elsif @is_owner
        .add_desc= best_in_place @poll, :description, :type => :textarea, :nil => 'add description...', :ok_button => 'OK', :path => country_poll_path(@country, @poll), :classes => 'update_desc_success'
      - elsif @poll.description.present?
        .desc= @poll.description

      .comments_head
        = best_in_place_if @is_owner, @poll, :coverage, :display_with => :poll_coverage_info, :helper_options => { :country => @country }, :type => :select, :collection => poll_coverage_data(@poll.coverage, @country), :path => country_poll_path(@country, @poll)

        %span.sep
          |
        = link_to_function pluralize(@poll.comment_threads.size, 'comment'), '$("#poll_comments .detail").show("blind")', :id => 'ltpcs'

      = render 'poll_comments'

  #spb
    .rc  
      %ul
        #follow= render 'follow'
      
        Share to
        %li.share= link_to 'Facebook', '#'
        %li.share= link_to 'Twitter', '#'
        %li.share= link_to 'Google', '#'
    
      .polls
        %h3 More Questions
        - polls = @poll.more_polls
      
      
        %ul
          - polls.each do |p|
            %li= link_to p.question_answers, country_poll_path(@country, p)
    
      -#.stats
      -#  %h2 More info
    
    .lc
      - @ballot ||= Ballot.new(:vote => 0)
  
      .ata
        - if !@ballot.new_record?
          = render 'edit_ballot'
        
        - else
          %h2.ballot
            - if @poll.simple?
              What is your opinion on the question?
            - else
              Which one is your answer?
    
            = link_to_function 'Vote NOW!', "aac.show_ballot()", :id => 'ballot_action', :class => 'button'
          
          #ballot
            - if !current_user.present?
              .msg 
                Your account information is required here. Please
                %a(href='/login?return_to=#{request.path}') log in
                first.
          
            - elsif current_user.can_answer?(@poll)
              = render 'ballot_form', :url => country_poll_ballots_path(@country, @poll)
          
            - else
              %p
                You cannot answer the question because its creator is asking for answers
                from <strong>people</strong> who are
                - if @poll.coverage == 1
                  <strong>from #{@country}</strong>.
                - else
                  <strong>not from #{@country}</strong>.
              %div
                You may want to
                %ul
                  %li
                    = link_to 'follow the question', '#'
                    to keep updated
                  %li
                    create
                    = link_to 'a new question', '#'
                    from this one
                  %li
                    check
                    = link_to 'your profile', user_path(current_user)


                        
      #ballots
        - if @complex.blank?
          %h2 Waiting for 10 people's votes
        - else
          %h2 #{ @poll.ballots_count } people have voted
    
          = render 'complex'


              
